// As simple as it gets: 1-core system with 2 short processes

sys = {
    cores = {
        simpleCore = {
            type = "Simple";
            dcache = "l1d";
            icache = "l1i";
        };
    };

    lineSize = 64;

    caches = {
        l1d = {
            size = 65536;
        };
        l1i = {
            size = 32768;
        };
        l2 = {
            type = "Simple";
            array = {
                type = "SetAssoc";
                ways = 8;
            };
            repl = {
                type = "LRU";
            };
            caches = 1;
            size = 32768;
            children = "l1i|l1d";  // interleave
            latency = 5;
            wrLatency = 20;
        };
        l3 = {
            type = "Hybrid"; // using hybrid cache, which has normal latency and slow latency
            array = {
                type = "SetAssoc";
                ways = 8;
            };
            repl = {
                type = "NMRU"; // use NMRU replacement policy to implement hybrid cache
            };
            caches = 1;
            size = 32768;
            children = "l2";
            latency = 20;
            slowLatency = 30; // set your slow latency, which is XRAM's latency
            wrLatency = 50;
        };
    };
};

sim = {
    phaseLength = 10000;
    schedQuantum = 50;  // switch threads frequently
    procStatsFilter = "l1.*|l2.*";
};

process0 = {
    command = "ls -alh --color ../../tests/";
};
